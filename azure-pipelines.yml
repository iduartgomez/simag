jobs:
  - job: style
    displayName: Style linting
    pool:
      vmImage: ubuntu-latest
    continueOnError: "true"
    steps:
      - template: install-rust.yml@templates
        parameters:
          rust: stable
          components:
            - rustfmt
            - clippy
      - script: cargo fmt --all -- --check
        displayName: cargo fmt --check
      - script: cargo clippy --all -- -D warnings
        displayName: cargo clippy

  - job: msrv
    displayName: "Minimum supported Rust version: 1.49"
    dependsOn: []
    # This represents the minimum Rust version supported.
    # Tests are not run as tests may require newer versions of rust.
    pool:
      vmImage: ubuntu-latest
    continueOnError: "false"
    steps:
      - template: install-rust.yml@templates
        parameters:
          rust: 1.49
      - script: cargo check --workspace
        displayName: cargo check
      - script: cargo check --no-default-features --workspace
        displayName: cargo check --no-default-features
      - script: cargo check --all-features --workspace
        displayName: cargo check --all-features

  - job: main_linux
    displayName: Compile and test Linux
    dependsOn: []
    pool:
      vmImage: ubuntu-latest
    continueOnError: "false"
    steps:
      - template: install-rust.yml@templates
        parameters:
          rust: stable
      - script: sudo apt-get install libxcb-shape0-dev libxcb-xfixes0-dev
        displayName: Install depedencies
      - script: cargo check --workspace
        displayName: cargo check
      - script: cargo check --no-default-features --workspace
        displayName: cargo check --no-default-features
      - script: cargo check --all-features --workspace
        displayName: cargo check --all-features
      - script: cargo test --all-features --workspace
        displayName: cargo test
      - script: cargo doc --no-deps --workspace
        displayName: cargo doc

  - job: main_other_os
    displayName: Compile and test
    dependsOn: []
    strategy:
      matrix:
        MacOS:
          vmImage: macOS-10.15
          rust: stable
        Windows:
          vmImage: windows-2019
          rust: stable
    pool:
      vmImage: $(vmImage)
    continueOnError: "false"
    steps:
      - template: install-rust.yml@templates
        parameters:
          rust: $(rust)
      - script: cargo check -p simag_core -p simag_networking
        displayName: cargo check
      - script: cargo test -p simag_core -p simag_networking
        displayName: cargo test
      - script: cargo doc --no-deps --p simag_core -p simag_networking
        displayName: cargo doc

  - template: coverage.yml@templates
    parameters:
      token: $(CODECOV_TOKEN_SECRET)

resources:
  repositories:
    - repository: templates
      type: github
      name: crate-ci/azure-pipelines
      ref: refs/heads/v0.4
      endpoint: iduartgomez
